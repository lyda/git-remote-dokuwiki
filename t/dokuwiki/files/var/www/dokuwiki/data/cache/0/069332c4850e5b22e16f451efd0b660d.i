a:622:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"UTF-8 decoder capability and stress test";}i:2;i:1;}i:3;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:41;}i:4;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:41;}i:5;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:41;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"Markus Kuhn <";}i:2;i:84;}i:7;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:31:"http://www.cl.cam.ac.uk/~mgk25/";i:1;N;}i:2;i:97;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:"> - 2015-08-28 - CC BY 4.0";}i:2;i:128;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:154;}i:10;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:154;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:272:"This test file can help you examine, how your UTF-8 decoder handles
various types of correct, malformed, or otherwise interesting UTF-8
sequences. This file is not meant to be a conformance test. It does
not prescribe any particular outcome. Therefore, there is no way to
";}i:2;i:156;}i:12;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:428;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"pass";}i:2;i:429;}i:14;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:433;}i:15;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" or ";}i:2;i:434;}i:16;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:438;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"fail";}i:2;i:439;}i:18;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:443;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:377:" this test file, even though the text does suggest a
preferable decoder behaviour at some places. Its aim is, instead, to
help you think about, and test, the behaviour of your UTF-8 decoder on a
systematic collection of unusual inputs. Experience so far suggests
that most first-time authors of UTF-8 decoders find at least one
serious problem in their decoder using this file.";}i:2;i:444;}i:20;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:821;}i:21;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:821;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:191:"The test lines below cover boundary conditions, malformed UTF-8
sequences, as well as correctly encoded UTF-8 sequences of Unicode code
points that should never occur in a correct UTF-8 file.";}i:2;i:823;}i:23;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1014;}i:24;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1014;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:97:"According to ISO 10646-1:2000, sections D.7 and 2.3c, a device
receiving UTF-8 shall interpret a ";}i:2;i:1016;}i:26;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1113;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:100:"malformed sequence in the same way
that it interprets a character that is outside the adopted subset";}i:2;i:1114;}i:28;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1214;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" and
";}i:2;i:1215;}i:30;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1220;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"characters that are not within the adopted subset shall be indicated
to the user";}i:2;i:1221;}i:32;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1301;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:629:" by a receiving device. One commonly used approach in
UTF-8 decoders is to replace any malformed UTF-8 sequence by a
replacement character (U+FFFD), which looks a bit like an inverted
question mark, or a similar symbol. It might be a good idea to
visually distinguish a malformed UTF-8 sequence from a correctly
encoded Unicode character that is just not available in the current
font but otherwise fully legal, even though ISO 10646-1 doesn't
mandate this. In any case, just ignoring malformed sequences or
unavailable characters does not conform to ISO 10646, will make
debugging more difficult, and can lead to user confusion.";}i:2;i:1302;}i:34;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1931;}i:35;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1931;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:352:"Please check, whether a malformed UTF-8 sequence is (1) represented at
all, (2) represented by exactly one single replacement character (or
equivalent signal), and (3) the following quotation mark after an
illegal UTF-8 sequence is correctly displayed, i.e. proper
resynchronization takes place immediately after any malformed
sequence. This file says ";}i:2;i:1933;}i:37;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2285;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"THE END";}i:2;i:2286;}i:39;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2293;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:" in the last line, so if you don't
see that, your decoder crashed somehow before, which should always be
cause for concern.";}i:2;i:2294;}i:41;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2417;}i:42;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2417;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:108:"All lines in this file are exactly 79 characters long (plus the line
feed). In addition, all lines end with ";}i:2;i:2419;}i:44;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2527;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"|";}i:2;i:2528;}i:46;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2529;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:", except for the two test
lines 2.1.1 and 2.2.1, which contain non-printable ";}i:2;i:2530;}i:48;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:5:"ASCII";}i:2;i:2607;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:" controls
U+0000 and U+007F. If you display this file with a fixed-width font,
these ";}i:2;i:2612;}i:50;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2697;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"|";}i:2;i:2698;}i:52;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2699;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:261:" characters should all line up in column 79 (right margin).
This allows you to test quickly, whether your UTF-8 decoder finds the
correct number of characters in every line, that is whether each
malformed sequences is replaced by a single replacement character.";}i:2;i:2700;}i:54;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2961;}i:55;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2961;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:316:"Note that, as an alternative to the notion of malformed sequence used
here, it is also a perfectly acceptable (and in some situations even
preferable) solution to represent each individual byte of a malformed
sequence with a replacement character. If you follow this strategy in
your decoder, then please ignore the ";}i:2;i:2963;}i:57;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3279;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"|";}i:2;i:3280;}i:59;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3281;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" column.";}i:2;i:3282;}i:61;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3290;}i:62;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3290;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"Here come the tests:                                                          |";}i:2;i:3293;}i:64;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3372;}i:65;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:3372;}i:66;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3372;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"1  Some correct UTF-8 text                                                    |";}i:2;i:3453;}i:68;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3532;}i:69;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:3532;}i:70;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3532;}i:71;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:"You should see the Greek word 'kosme':       ";}i:2;i:3613;}i:72;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3658;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"κόσμε";}i:2;i:3659;}i:74;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3670;}i:75;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"                          |";}i:2;i:3671;}i:76;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3698;}i:77;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:3698;}i:78;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3698;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"2  Boundary condition test cases                                              |";}i:2;i:3779;}i:80;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3858;}i:81;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:3858;}i:82;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3858;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"2.1  First possible sequence of a certain length                              |";}i:2;i:3939;}i:84;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4018;}i:85;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:4018;}i:86;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4018;}i:87;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"2.1.1  1 byte  (U-00000000):        ";}i:2;i:4099;}i:88;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4135;}i:89;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"�";}i:2;i:4136;}i:90;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4139;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"
2.1.2  2 bytes (U-00000080):        ";}i:2;i:4140;}i:92;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4217;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"";}i:2;i:4218;}i:94;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4220;}i:95;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
2.1.3  3 bytes (U-00000800):        ";}i:2;i:4221;}i:96;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4298;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"ࠀ";}i:2;i:4299;}i:98;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4302;}i:99;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
2.1.4  4 bytes (U-00010000):        ";}i:2;i:4303;}i:100;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4380;}i:101;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"𐀀";}i:2;i:4381;}i:102;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4385;}i:103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
2.1.5  5 bytes (U-00200000):        ";}i:2;i:4386;}i:104;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4463;}i:105;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"�����";}i:2;i:4464;}i:106;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4479;}i:107;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
2.1.6  6 bytes (U-04000000):        ";}i:2;i:4480;}i:108;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4557;}i:109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:4558;}i:110;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4576;}i:111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"                                       |";}i:2;i:4577;}i:112;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4617;}i:113;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:4617;}i:114;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4617;}i:115;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"2.2  Last possible sequence of a certain length                               |";}i:2;i:4698;}i:116;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4777;}i:117;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:4777;}i:118;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4777;}i:119;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"2.2.1  1 byte  (U-0000007F):        ";}i:2;i:4858;}i:120;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4894;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"";}i:2;i:4895;}i:122;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4896;}i:123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"
2.2.2  2 bytes (U-000007FF):        ";}i:2;i:4897;}i:124;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4974;}i:125;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"߿";}i:2;i:4975;}i:126;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4977;}i:127;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
2.2.3  3 bytes (U-0000FFFF):        ";}i:2;i:4978;}i:128;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5055;}i:129;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"￿";}i:2;i:5056;}i:130;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5059;}i:131;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
2.2.4  4 bytes (U-001FFFFF):        ";}i:2;i:5060;}i:132;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5137;}i:133;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"����";}i:2;i:5138;}i:134;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5150;}i:135;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
2.2.5  5 bytes (U-03FFFFFF):        ";}i:2;i:5151;}i:136;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5228;}i:137;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"�����";}i:2;i:5229;}i:138;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5244;}i:139;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
2.2.6  6 bytes (U-7FFFFFFF):        ";}i:2;i:5245;}i:140;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5322;}i:141;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:5323;}i:142;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5341;}i:143;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"                                       |";}i:2;i:5342;}i:144;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5382;}i:145;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:5382;}i:146;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5382;}i:147;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"2.3  Other boundary conditions                                                |";}i:2;i:5463;}i:148;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5542;}i:149;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:5542;}i:150;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5542;}i:151;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"2.3.1  U-0000D7FF = ed 9f bf = ";}i:2;i:5623;}i:152;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5654;}i:153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"퟿";}i:2;i:5655;}i:154;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5658;}i:155;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                            |
2.3.2  U-0000E000 = ee 80 80 = ";}i:2;i:5659;}i:156;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5736;}i:157;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"";}i:2;i:5737;}i:158;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5740;}i:159;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                            |
2.3.3  U-0000FFFD = ef bf bd = ";}i:2;i:5741;}i:160;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5818;}i:161;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"�";}i:2;i:5819;}i:162;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5822;}i:163;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"                                            |
2.3.4  U-0010FFFF = f4 8f bf bf = ";}i:2;i:5823;}i:164;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5903;}i:165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"􏿿";}i:2;i:5904;}i:166;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5908;}i:167;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                         |
2.3.5  U-00110000 = f4 90 80 80 = ";}i:2;i:5909;}i:168;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5986;}i:169;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"����";}i:2;i:5987;}i:170;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5999;}i:171;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"                                         |";}i:2;i:6000;}i:172;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6042;}i:173;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:6042;}i:174;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6042;}i:175;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3  Malformed sequences                                                        |";}i:2;i:6123;}i:176;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6202;}i:177;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:6202;}i:178;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6202;}i:179;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.1  Unexpected continuation bytes                                            |";}i:2;i:6283;}i:180;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6362;}i:181;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:6362;}i:182;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6362;}i:183;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:159:"Each unexpected continuation byte should be separately signalled as a         |
malformed sequence of its own.                                                |";}i:2;i:6443;}i:184;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6602;}i:185;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:6602;}i:186;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6602;}i:187;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"3.1.1  First continuation byte 0x80: ";}i:2;i:6683;}i:188;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:6720;}i:189;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"�";}i:2;i:6721;}i:190;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:6724;}i:191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                      |
3.1.2  Last  continuation byte 0xbf: ";}i:2;i:6725;}i:192;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:6802;}i:193;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"�";}i:2;i:6803;}i:194;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:6806;}i:195;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:"                                      |";}i:2;i:6807;}i:196;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6846;}i:197;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:6846;}i:198;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6846;}i:199;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"3.1.3  2 continuation bytes: ";}i:2;i:6927;}i:200;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:6956;}i:201;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"��";}i:2;i:6957;}i:202;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:6963;}i:203;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"                                             |
3.1.4  3 continuation bytes: ";}i:2;i:6964;}i:204;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:7040;}i:205;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:7041;}i:206;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:7050;}i:207;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:"                                            |
3.1.5  4 continuation bytes: ";}i:2;i:7051;}i:208;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:7126;}i:209;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"����";}i:2;i:7127;}i:210;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:7139;}i:211;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:"                                           |
3.1.6  5 continuation bytes: ";}i:2;i:7140;}i:212;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:7214;}i:213;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"�����";}i:2;i:7215;}i:214;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:7230;}i:215;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:"                                          |
3.1.7  6 continuation bytes: ";}i:2;i:7231;}i:216;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:7304;}i:217;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:7305;}i:218;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:7323;}i:219;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:"                                         |
3.1.8  7 continuation bytes: ";}i:2;i:7324;}i:220;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:7396;}i:221;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"�������";}i:2;i:7397;}i:222;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:7418;}i:223;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:"                                        |";}i:2;i:7419;}i:224;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7460;}i:225;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:7460;}i:226;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7460;}i:227;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.1.9  Sequence of all 64 possible continuation bytes (0x80-0xbf):            |";}i:2;i:7541;}i:228;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7620;}i:229;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:595:"                                                                            |
 "����������������                                                          |
  ����������������                                                          |
  ����������������                                                          |
  ����������������"                                                         |
                                                                            |";}i:2;i:7620;}i:230;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7620;}i:231;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.2  Lonely start characters                                                  |";}i:2;i:8229;}i:232;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8308;}i:233;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:8308;}i:234;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8308;}i:235;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.2.1  All 32 first bytes of 2-byte sequences (0xc0-0xdf),                    |";}i:2;i:8389;}i:236;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8468;}i:237;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:453:"     each followed by a space character:                                    |
                                                                            |
 "� � � � � � � � � � � � � � � �                                           |
  � � � � � � � � � � � � � � � � "                                         |
                                                                            |";}i:2;i:8468;}i:238;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8468;}i:239;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.2.2  All 16 first bytes of 3-byte sequences (0xe0-0xef),                    |";}i:2;i:8933;}i:240;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9012;}i:241;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:343:"     each followed by a space character:                                    |
                                                                            |
 "� � � � � � � � � � � � � � � � "                                         |
                                                                            |";}i:2;i:9012;}i:242;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9012;}i:243;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.2.3  All 8 first bytes of 4-byte sequences (0xf0-0xf7),                     |";}i:2;i:9365;}i:244;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9444;}i:245;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:327:"     each followed by a space character:                                    |
                                                                            |
 "� � � � � � � � "                                                         |
                                                                            |";}i:2;i:9444;}i:246;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9444;}i:247;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.2.4  All 4 first bytes of 5-byte sequences (0xf8-0xfb),                     |";}i:2;i:9781;}i:248;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9860;}i:249;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:319:"     each followed by a space character:                                    |
                                                                            |
 "� � � � "                                                                 |
                                                                            |";}i:2;i:9860;}i:250;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9860;}i:251;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.2.5  All 2 first bytes of 6-byte sequences (0xfc-0xfd),                     |";}i:2;i:10189;}i:252;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10268;}i:253;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:315:"     each followed by a space character:                                    |
                                                                            |
 "� � "                                                                     |
                                                                            |";}i:2;i:10268;}i:254;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10268;}i:255;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.3  Sequences with last continuation byte missing                            |";}i:2;i:10593;}i:256;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10672;}i:257;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:10672;}i:258;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10672;}i:259;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:239:"All bytes of an incomplete sequence should be signalled as a single           |
malformed sequence, i.e., you should see only a single replacement            |
character in each of the next 10 tests. (Characters as in section 2)          |";}i:2;i:10753;}i:260;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10992;}i:261;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:10992;}i:262;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10992;}i:263;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:"3.3.1  2-byte sequence with last byte missing (U+0000):     ";}i:2;i:11073;}i:264;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11133;}i:265;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"�";}i:2;i:11134;}i:266;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11137;}i:267;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"               |
3.3.2  3-byte sequence with last byte missing (U+0000):     ";}i:2;i:11138;}i:268;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11215;}i:269;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"��";}i:2;i:11216;}i:270;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11222;}i:271;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"               |
3.3.3  4-byte sequence with last byte missing (U+0000):     ";}i:2;i:11223;}i:272;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11300;}i:273;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:11301;}i:274;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11310;}i:275;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"               |
3.3.4  5-byte sequence with last byte missing (U+0000):     ";}i:2;i:11311;}i:276;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11388;}i:277;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"����";}i:2;i:11389;}i:278;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11401;}i:279;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"               |
3.3.5  6-byte sequence with last byte missing (U+0000):     ";}i:2;i:11402;}i:280;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11479;}i:281;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"�����";}i:2;i:11480;}i:282;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11495;}i:283;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"               |
3.3.6  2-byte sequence with last byte missing (U-000007FF): ";}i:2;i:11496;}i:284;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11573;}i:285;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"�";}i:2;i:11574;}i:286;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11577;}i:287;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"               |
3.3.7  3-byte sequence with last byte missing (U-0000FFFF): ";}i:2;i:11578;}i:288;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11655;}i:289;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"�";}i:2;i:11656;}i:290;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11659;}i:291;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"               |
3.3.8  4-byte sequence with last byte missing (U-001FFFFF): ";}i:2;i:11660;}i:292;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11737;}i:293;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:11738;}i:294;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11747;}i:295;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"               |
3.3.9  5-byte sequence with last byte missing (U-03FFFFFF): ";}i:2;i:11748;}i:296;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11825;}i:297;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"����";}i:2;i:11826;}i:298;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11838;}i:299;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"               |
3.3.10 6-byte sequence with last byte missing (U-7FFFFFFF): ";}i:2;i:11839;}i:300;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:11916;}i:301;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"�����";}i:2;i:11917;}i:302;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:11932;}i:303;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"               |";}i:2;i:11933;}i:304;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11949;}i:305;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:11949;}i:306;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11949;}i:307;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.4  Concatenation of incomplete sequences                                    |";}i:2;i:12030;}i:308;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12109;}i:309;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:12109;}i:310;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12109;}i:311;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:159:"All the 10 sequences of 3.3 concatenated, you should see 10 malformed         |
sequences being signalled:                                                    |";}i:2;i:12190;}i:312;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12349;}i:313;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:310:"                                                                            |
 "�����������������������������"                                                               |
                                                                            |";}i:2;i:12349;}i:314;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12349;}i:315;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"3.5  Impossible bytes                                                         |";}i:2;i:12667;}i:316;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12746;}i:317;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:12746;}i:318;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12746;}i:319;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"The following two bytes cannot appear in a correct UTF-8 string               |";}i:2;i:12827;}i:320;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12906;}i:321;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:12906;}i:322;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12906;}i:323;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"3.5.1  fe = ";}i:2;i:12987;}i:324;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:12999;}i:325;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"�";}i:2;i:13000;}i:326;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:13003;}i:327;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                                               |
3.5.2  ff = ";}i:2;i:13004;}i:328;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:13081;}i:329;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"�";}i:2;i:13082;}i:330;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:13085;}i:331;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:"                                                               |
3.5.3  fe fe ff ff = ";}i:2;i:13086;}i:332;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:13172;}i:333;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"����";}i:2;i:13173;}i:334;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:13185;}i:335;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:"                                                   |";}i:2;i:13186;}i:336;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13238;}i:337;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:13238;}i:338;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13238;}i:339;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"4  Overlong sequences                                                         |";}i:2;i:13319;}i:340;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13398;}i:341;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:13398;}i:342;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13398;}i:343;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:218:"The following sequences are not malformed according to the letter of          |
the Unicode 2.0 standard. However, they are longer then necessary and         |
a correct UTF-8 encoder is not allowed to produce them. A ";}i:2;i:13479;}i:344;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:13697;}i:345;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"safe UTF-8         |
decoder";}i:2;i:13698;}i:346;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:13726;}i:347;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:435:" should reject them just like malformed sequences for two             |
reasons: (1) It helps to debug applications if overlong sequences are         |
not treated as valid representations of characters, because this helps        |
to spot problems more quickly. (2) Overlong sequences provide                 |
alternative representations of characters, that could maliciously be          |
used to bypass filters that check only for ";}i:2;i:13727;}i:348;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:5:"ASCII";}i:2;i:14162;}i:349;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:313:" characters. For              |
instance, a 2-byte encoded line feed (LF) would not be caught by a            |
line counter that counts only 0x0a bytes, but it would still be               |
processed as a line feed by an unsafe UTF-8 decoder later in the              |
pipeline. From a security point of view, ";}i:2;i:14167;}i:350;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:5:"ASCII";}i:2;i:14480;}i:351;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:" compatibility of UTF-8         |
sequences means also, that ";}i:2;i:14485;}i:352;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:5:"ASCII";}i:2;i:14546;}i:353;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:" characters are *only* allowed to be          |
represented by ";}i:2;i:14551;}i:354;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:5:"ASCII";}i:2;i:14614;}i:355;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:" bytes in the range 0x00-0x7f. To ensure this             |
aspect of ";}i:2;i:14619;}i:356;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:5:"ASCII";}i:2;i:14689;}i:357;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:" compatibility, use only ";}i:2;i:14694;}i:358;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:14719;}i:359;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"safe UTF-8 decoders";}i:2;i:14720;}i:360;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:14739;}i:361;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:" that            |
reject overlong UTF-8 sequences for which a shorter encoding exists.          |";}i:2;i:14740;}i:362;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14838;}i:363;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:14838;}i:364;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14838;}i:365;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:"4.1  Examples of an overlong ";}i:2;i:14919;}i:366;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:5:"ASCII";}i:2;i:14948;}i:367;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:" character                                  |";}i:2;i:14953;}i:368;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14998;}i:369;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:14998;}i:370;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14998;}i:371;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:103:"With a safe UTF-8 decoder, all of the following five overlong                 |
representations of the ";}i:2;i:15079;}i:372;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:5:"ASCII";}i:2;i:15182;}i:373;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" character slash (";}i:2;i:15187;}i:374;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:15205;}i:375;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"/";}i:2;i:15206;}i:376;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:15207;}i:377;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:270:") should be rejected         |
like a malformed UTF-8 sequence, for instance by substituting it with         |
a replacement character. If you see a slash below, you do not have a          |
safe UTF-8 decoder!                                                           |";}i:2;i:15208;}i:378;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15478;}i:379;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:15478;}i:380;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15478;}i:381;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:"4.1.1 U+002F = c0 af             = ";}i:2;i:15559;}i:382;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:15594;}i:383;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"��";}i:2;i:15595;}i:384;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:15601;}i:385;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                        |
4.1.2 U+002F = e0 80 af          = ";}i:2;i:15602;}i:386;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:15679;}i:387;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:15680;}i:388;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:15689;}i:389;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                        |
4.1.3 U+002F = f0 80 80 af       = ";}i:2;i:15690;}i:390;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:15767;}i:391;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"����";}i:2;i:15768;}i:392;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:15780;}i:393;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                        |
4.1.4 U+002F = f8 80 80 80 af    = ";}i:2;i:15781;}i:394;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:15858;}i:395;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"�����";}i:2;i:15859;}i:396;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:15874;}i:397;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                        |
4.1.5 U+002F = fc 80 80 80 80 af = ";}i:2;i:15875;}i:398;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:15952;}i:399;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:15953;}i:400;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:15971;}i:401;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:"                                        |";}i:2;i:15972;}i:402;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16013;}i:403;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:16013;}i:404;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16013;}i:405;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"4.2  Maximum overlong sequences                                               |";}i:2;i:16094;}i:406;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16173;}i:407;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:16173;}i:408;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16173;}i:409;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:319:"Below you see the highest Unicode value that is still resulting in an         |
overlong sequence if represented with the given number of bytes. This         |
is a boundary test for safe UTF-8 decoders. All five characters should        |
be rejected like malformed UTF-8 sequences.                                   |";}i:2;i:16254;}i:410;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16573;}i:411;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:16573;}i:412;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16573;}i:413;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"4.2.1  U-0000007F = c1 bf             = ";}i:2;i:16654;}i:414;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:16694;}i:415;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"��";}i:2;i:16695;}i:416;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:16701;}i:417;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                   |
4.2.2  U-000007FF = e0 9f bf          = ";}i:2;i:16702;}i:418;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:16779;}i:419;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:16780;}i:420;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:16789;}i:421;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                   |
4.2.3  U-0000FFFF = f0 8f bf bf       = ";}i:2;i:16790;}i:422;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:16867;}i:423;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"����";}i:2;i:16868;}i:424;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:16880;}i:425;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                   |
4.2.4  U-001FFFFF = f8 87 bf bf bf    = ";}i:2;i:16881;}i:426;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:16958;}i:427;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"�����";}i:2;i:16959;}i:428;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:16974;}i:429;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                   |
4.2.5  U-03FFFFFF = fc 83 bf bf bf bf = ";}i:2;i:16975;}i:430;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:17052;}i:431;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:17053;}i:432;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:17071;}i:433;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"                                   |";}i:2;i:17072;}i:434;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17108;}i:435;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:17108;}i:436;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17108;}i:437;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"4.3  Overlong representation of the NUL character                             |";}i:2;i:17189;}i:438;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17268;}i:439;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:17268;}i:440;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17268;}i:441;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:131:"The following five sequences should also be rejected like malformed           |
UTF-8 sequences and should not be treated like the ";}i:2;i:17349;}i:442;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:5:"ASCII";}i:2;i:17480;}i:443;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:103:" NUL                  |
character.                                                                    |";}i:2;i:17485;}i:444;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17588;}i:445;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:17588;}i:446;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17588;}i:447;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"4.3.1  U+0000 = c0 80             = ";}i:2;i:17669;}i:448;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:17705;}i:449;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"��";}i:2;i:17706;}i:450;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:17712;}i:451;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
4.3.2  U+0000 = e0 80 80          = ";}i:2;i:17713;}i:452;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:17790;}i:453;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:17791;}i:454;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:17800;}i:455;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
4.3.3  U+0000 = f0 80 80 80       = ";}i:2;i:17801;}i:456;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:17878;}i:457;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"����";}i:2;i:17879;}i:458;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:17891;}i:459;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
4.3.4  U+0000 = f8 80 80 80 80    = ";}i:2;i:17892;}i:460;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:17969;}i:461;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"�����";}i:2;i:17970;}i:462;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:17985;}i:463;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                       |
4.3.5  U+0000 = fc 80 80 80 80 80 = ";}i:2;i:17986;}i:464;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:18063;}i:465;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:18064;}i:466;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:18082;}i:467;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"                                       |";}i:2;i:18083;}i:468;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18123;}i:469;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:18123;}i:470;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18123;}i:471;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"5  Illegal code positions                                                     |";}i:2;i:18204;}i:472;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18283;}i:473;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:18283;}i:474;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18283;}i:475;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:319:"The following UTF-8 sequences should be rejected like malformed               |
sequences, because they never represent valid ISO 10646 characters and        |
a UTF-8 decoder that accepts them might introduce security problems           |
comparable to overlong UTF-8 sequences.                                       |";}i:2;i:18364;}i:476;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18683;}i:477;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:18683;}i:478;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18683;}i:479;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"5.1 Single UTF-16 surrogates                                                  |";}i:2;i:18764;}i:480;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18843;}i:481;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:18843;}i:482;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18843;}i:483;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"5.1.1  U+D800 = ed a0 80 = ";}i:2;i:18924;}i:484;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:18951;}i:485;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:18952;}i:486;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:18961;}i:487;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                                |
5.1.2  U+DB7F = ed ad bf = ";}i:2;i:18962;}i:488;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:19039;}i:489;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:19040;}i:490;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:19049;}i:491;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                                |
5.1.3  U+DB80 = ed ae 80 = ";}i:2;i:19050;}i:492;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:19127;}i:493;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:19128;}i:494;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:19137;}i:495;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                                |
5.1.4  U+DBFF = ed af bf = ";}i:2;i:19138;}i:496;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:19215;}i:497;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:19216;}i:498;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:19225;}i:499;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                                |
5.1.5  U+DC00 = ed b0 80 = ";}i:2;i:19226;}i:500;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:19303;}i:501;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:19304;}i:502;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:19313;}i:503;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                                |
5.1.6  U+DF80 = ed be 80 = ";}i:2;i:19314;}i:504;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:19391;}i:505;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:19392;}i:506;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:19401;}i:507;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                                |
5.1.7  U+DFFF = ed bf bf = ";}i:2;i:19402;}i:508;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:19479;}i:509;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"���";}i:2;i:19480;}i:510;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:19489;}i:511;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"                                                |";}i:2;i:19490;}i:512;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:19539;}i:513;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:19539;}i:514;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:19539;}i:515;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"5.2 Paired UTF-16 surrogates                                                  |";}i:2;i:19620;}i:516;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:19699;}i:517;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:19699;}i:518;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:19699;}i:519;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"5.2.1  U+D800 U+DC00 = ed a0 80 ed b0 80 = ";}i:2;i:19780;}i:520;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:19823;}i:521;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:19824;}i:522;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:19842;}i:523;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"                               |
5.2.2  U+D800 U+DFFF = ed a0 80 ed bf bf = ";}i:2;i:19843;}i:524;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:19919;}i:525;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:19920;}i:526;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:19938;}i:527;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"                               |
5.2.3  U+DB7F U+DC00 = ed ad bf ed b0 80 = ";}i:2;i:19939;}i:528;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:20015;}i:529;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:20016;}i:530;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:20034;}i:531;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"                               |
5.2.4  U+DB7F U+DFFF = ed ad bf ed bf bf = ";}i:2;i:20035;}i:532;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:20111;}i:533;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:20112;}i:534;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:20130;}i:535;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"                               |
5.2.5  U+DB80 U+DC00 = ed ae 80 ed b0 80 = ";}i:2;i:20131;}i:536;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:20207;}i:537;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:20208;}i:538;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:20226;}i:539;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"                               |
5.2.6  U+DB80 U+DFFF = ed ae 80 ed bf bf = ";}i:2;i:20227;}i:540;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:20303;}i:541;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:20304;}i:542;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:20322;}i:543;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"                               |
5.2.7  U+DBFF U+DC00 = ed af bf ed b0 80 = ";}i:2;i:20323;}i:544;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:20399;}i:545;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:20400;}i:546;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:20418;}i:547;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"                               |
5.2.8  U+DBFF U+DFFF = ed af bf ed bf bf = ";}i:2;i:20419;}i:548;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:20495;}i:549;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"������";}i:2;i:20496;}i:550;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:20514;}i:551;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"                               |";}i:2;i:20515;}i:552;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:20547;}i:553;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:20547;}i:554;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:20547;}i:555;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"5.3 Noncharacter code positions                                               |";}i:2;i:20628;}i:556;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:20707;}i:557;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:20707;}i:558;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:20707;}i:559;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"The following ";}i:2;i:20788;}i:560;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:20802;}i:561;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"noncharacters";}i:2;i:20803;}i:562;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:20816;}i:563;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" are ";}i:2;i:20817;}i:564;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:20822;}i:565;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"reserved for internal use";}i:2;i:20823;}i:566;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:20848;}i:567;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:99:" by              |
applications, and according to older versions of the Unicode Standard         |
";}i:2;i:20849;}i:568;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:20948;}i:569;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"should never be interchanged";}i:2;i:20949;}i:570;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:20977;}i:571;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:289:". Unicode Corrigendum #9 dropped the            |
latter restriction. Nevertheless, their presence in incoming UTF-8 data       |
can remain a potential security risk, depending on what use is made of        |
these codes subsequently. Examples of such internal use:                      |";}i:2;i:20978;}i:572;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:21267;}i:573;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:21267;}i:574;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:21267;}i:575;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:" - Some file APIs with 16-bit characters may use the integer value -1         |";}i:2;i:21348;}i:576;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:21427;}i:577;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:155:" = U+FFFF to signal an end-of-file (EOF) or error condition.                |
                                                                            |";}i:2;i:21427;}i:578;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:21427;}i:579;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:" - In some UTF-16 receivers, code point U+FFFE might trigger a                |";}i:2;i:21588;}i:580;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:21667;}i:581;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:155:" byte-swap operation (to convert between UTF-16LE and UTF-16BE).            |
                                                                            |";}i:2;i:21667;}i:582;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:21667;}i:583;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:319:"With such internal use of noncharacters, it may be desirable and safer        |
to block those code points in UTF-8 decoders, as they should never            |
occur legitimately in incoming UTF-8 data, and could trigger unsafe           |
behaviour in subsequent processing.                                           |";}i:2;i:21828;}i:584;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:22147;}i:585;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:22147;}i:586;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:22147;}i:587;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"Particularly problematic noncharacters in 16-bit applications:                |";}i:2;i:22228;}i:588;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:22307;}i:589;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:22307;}i:590;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:22307;}i:591;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:"5.3.1  U+FFFE = ef bf be = ";}i:2;i:22388;}i:592;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:22415;}i:593;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"￾";}i:2;i:22416;}i:594;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:22419;}i:595;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"                                                |
5.3.2  U+FFFF = ef bf bf = ";}i:2;i:22420;}i:596;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:22497;}i:597;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"￿";}i:2;i:22498;}i:598;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:22501;}i:599;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"                                                |";}i:2;i:22502;}i:600;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:22551;}i:601;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:22551;}i:602;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:22551;}i:603;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"Other noncharacters:                                                          |";}i:2;i:22632;}i:604;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:22711;}i:605;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:22711;}i:606;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:22711;}i:607;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:"5.3.3  U+FDD0 .. U+FDEF = ";}i:2;i:22792;}i:608;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:22818;}i:609;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:96:"﷐﷑﷒﷓﷔﷕﷖﷗﷘﷙﷚﷛﷜﷝﷞﷟﷠﷡﷢﷣﷤﷥﷦﷧﷨﷩﷪﷫﷬﷭﷮﷯";}i:2;i:22819;}i:610;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:22915;}i:611;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"|";}i:2;i:22916;}i:612;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:22917;}i:613;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:77:"                                                                            |";}i:2;i:22917;}i:614;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:22917;}i:615;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"5.3.4  U+nFFFE U+nFFFF (for n = 1..10)                                        |";}i:2;i:22998;}i:616;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:23077;}i:617;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:371:"                                                                            |
     "🿾🿿𯿾𯿿𿿾𿿿񏿾񏿿񟿾񟿿񯿾񯿿񿿾񿿿򏿾򏿿                                    |
      򟿾򟿿򯿾򯿿򿿾򿿿󏿾󏿿󟿾󟿿󯿾󯿿󿿾󿿿􏿾􏿿"                                   |
                                                                            |";}i:2;i:23077;}i:618;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:23077;}i:619;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"THE END                                                                       |";}i:2;i:23458;}i:620;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:23458;}i:621;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:23458;}}